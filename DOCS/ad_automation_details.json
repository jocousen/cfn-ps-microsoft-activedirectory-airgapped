{
    "AutomationExecution": {
        "AutomationExecutionId": "1dd05417-0638-4790-b69f-ec6a43682318",
        "DocumentName": "ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver-AWSQuickstartActiveDirectoryDS-HjwXn8I2xZuJ",
        "DocumentVersion": "1",
        "ExecutionStartTime": "2025-02-12T14:59:05.719000-05:00",
        "ExecutionEndTime": "2025-02-12T15:35:42.494000-05:00",
        "AutomationExecutionStatus": "Success",
        "StepExecutions": [
            {
                "StepName": "dcsInstanceIds",
                "Action": "aws:executeAwsApi",
                "OnFailure": "step:signalfailure",
                "ExecutionStartTime": "2025-02-12T14:59:06.154000-05:00",
                "ExecutionEndTime": "2025-02-12T14:59:06.685000-05:00",
                "StepStatus": "Success",
                "Inputs": {
                    "Api": "\"DescribeInstances\"",
                    "Filters": "[{\"Values\":[\"QUICKSILVERDC1\",\"QUICKSILVERDC2\"],\"Name\":\"tag:Name\"},{\"Values\":[\"ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver\"],\"Name\":\"tag:aws:cloudformation:stack-name\"},{\"Values\":[\"running\"],\"Name\":\"instance-state-name\"}]",
                    "Service": "\"ec2\""
                },
                "Outputs": {
                    "InstanceIds": [
                        "i-06aafc571abe82f37",
                        "i-07da7ede6f65300df"
                    ]
                },
                "StepExecutionId": "b1573d3f-0e23-4e6c-abaf-0415ca4493cd",
                "OverriddenParameters": {},
                "NextStep": "dc1InstanceId",
                "ValidNextSteps": [
                    "dc1InstanceId"
                ]
            },
            {
                "StepName": "dc1InstanceId",
                "Action": "aws:executeAwsApi",
                "OnFailure": "step:signalfailure",
                "ExecutionStartTime": "2025-02-12T14:59:06.891000-05:00",
                "ExecutionEndTime": "2025-02-12T14:59:07.380000-05:00",
                "StepStatus": "Success",
                "Inputs": {
                    "Api": "\"DescribeInstances\"",
                    "Filters": "[{\"Values\":[\"QUICKSILVERDC1\"],\"Name\":\"tag:Name\"},{\"Values\":[\"ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver\"],\"Name\":\"tag:aws:cloudformation:stack-name\"},{\"Values\":[\"running\"],\"Name\":\"instance-state-name\"}]",
                    "Service": "\"ec2\""
                },
                "Outputs": {
                    "InstanceId": [
                        "i-07da7ede6f65300df"
                    ]
                },
                "StepExecutionId": "258a0335-7763-4012-a8af-59763d09d80c",
                "OverriddenParameters": {},
                "NextStep": "dc2InstanceId",
                "ValidNextSteps": [
                    "dc2InstanceId"
                ]
            },
            {
                "StepName": "dc2InstanceId",
                "Action": "aws:executeAwsApi",
                "OnFailure": "step:signalfailure",
                "ExecutionStartTime": "2025-02-12T14:59:07.612000-05:00",
                "ExecutionEndTime": "2025-02-12T14:59:08.059000-05:00",
                "StepStatus": "Success",
                "Inputs": {
                    "Api": "\"DescribeInstances\"",
                    "Filters": "[{\"Values\":[\"QUICKSILVERDC2\"],\"Name\":\"tag:Name\"},{\"Values\":[\"ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver\"],\"Name\":\"tag:aws:cloudformation:stack-name\"},{\"Values\":[\"running\"],\"Name\":\"instance-state-name\"}]",
                    "Service": "\"ec2\""
                },
                "Outputs": {
                    "InstanceId": [
                        "i-06aafc571abe82f37"
                    ]
                },
                "StepExecutionId": "cd08002a-6b44-4f8a-8154-a4987947c428",
                "OverriddenParameters": {},
                "NextStep": "intializeInstance",
                "ValidNextSteps": [
                    "intializeInstance"
                ]
            },
            {
                "StepName": "intializeInstance",
                "Action": "aws:runCommand",
                "ExecutionStartTime": "2025-02-12T14:59:08.251000-05:00",
                "ExecutionEndTime": "2025-02-12T15:02:18.526000-05:00",
                "StepStatus": "Success",
                "Inputs": {
                    "CloudWatchOutputConfig": "{\"cloudWatchLogGroupName\":\"/aws/Quick_Start/ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver\",\"cloudWatchOutputEnabled\":true}",
                    "DocumentName": "\"AWS-RunPowerShellScript\"",
                    "InstanceIds": "[\"i-06aafc571abe82f37\",\"i-07da7ede6f65300df\"]",
                    "Parameters": "{\"commands\":\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\\n\\n$S3BucketName = 'quicksilver-aws-ia'\\n$S3KeyPrefix = 'cfn-ps-microsoft-activedirectory/'\\n$S3BucketRegion = 'us-east-1'\\n\\n$CustomModules = @(\\n    'Module-AD.psd1',\\n    'Module-AD.psm1'\\n)\\n\\n$Modules = @(\\n    @{\\n        Name = 'NetworkingDsc'\\n        Version = '8.2.0'\\n    },\\n    @{\\n        Name = 'ActiveDirectoryDsc'\\n        Version = '6.0.1'\\n    },\\n    @{\\n        Name = 'ComputerManagementDsc'\\n        Version = '8.5.0'\\n    },\\n    @{\\n        Name = 'DnsServerDsc'\\n        Version = '3.0.0'\\n    },\\n    @{\\n        Name = 'AuditPolicyDsc'\\n        Version = '1.4.0.0'\\n    }\\n)\\n\\nWrite-Output 'Creating AWSQuickstart Directory'\\nTry {\\n    $Null = New-Item -Path 'C:\\\\AWSQuickstart\\\\Module-AD' -ItemType 'Directory' -ErrorAction Stop\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to create AWSQuickstart directory $_\\\"\\n    Exit 1\\n}\\n\\n$S3KeyPrefix = $S3KeyPrefix.Substring(0,$S3KeyPrefix.Length -1)\\nWrite-Output 'Downloading AD PowerShell Module'\\nForeach ($CustomModule in $CustomModules) {\\n    Try {\\n        $Null = Read-S3Object -BucketName $S3BucketName -Key \\\"$($S3KeyPrefix)/scripts/Modules/Module-AD/$CustomModule\\\" -File \\\"C:\\\\AWSQuickstart\\\\Module-AD\\\\$CustomModule\\\" -Region $S3BucketRegion\\n    } Catch [System.Exception] {\\n        Write-Output \\\"Failed to read and download $CustomModule.Name from S3 $_\\\"\\n        Exit 1\\n    }\\n}\\n\\nWrite-Output 'Installing NuGet Package Provider'\\nTry {\\n    $Null = Install-PackageProvider -Name 'NuGet' -MinimumVersion '2.8.5' -Force -ErrorAction Stop\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to install NuGet Package Provider $_\\\"\\n    Exit 1\\n}\\n\\nWrite-Output 'Setting PSGallery Respository to trusted'\\nTry {\\n    Set-PSRepository -Name 'PSGallery' -InstallationPolicy 'Trusted' -ErrorAction Stop\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to set PSGallery Respository to trusted $_\\\"\\n    Exit 1\\n}\\n\\nWrite-Output 'Installing the needed Powershell DSC modules for this Quick Start'\\nForeach ($Module in $Modules) {\\n    Try {\\n        Install-Module -Name $Module.Name -RequiredVersion $Module.Version -ErrorAction Stop\\n    } Catch [System.Exception] {\\n        Write-Output \\\"Failed to Import Modules $_\\\"\\n        Exit 1\\n    }\\n} \"}"
                },
                "Outputs": {
                    "CommandId": [
                        "4a96cfbf-9063-44b5-bb20-ada8bd7f2b68"
                    ],
                    "OutputPayload": [
                        "{\"Status\":\"Success\",\"CommandId\":\"4a96cfbf-9063-44b5-bb20-ada8bd7f2b68\"}"
                    ],
                    "Status": [
                        "Success"
                    ]
                },
                "StepExecutionId": "af264164-fccc-4138-bd50-9515f014cf76",
                "OverriddenParameters": {},
                "NextStep": "configureInstance",
                "ValidNextSteps": [
                    "configureInstance"
                ]
            },
            {
                "StepName": "configureInstance",
                "Action": "aws:runCommand",
                "ExecutionStartTime": "2025-02-12T15:02:18.730000-05:00",
                "ExecutionEndTime": "2025-02-12T15:03:07.554000-05:00",
                "StepStatus": "Success",
                "Inputs": {
                    "CloudWatchOutputConfig": "{\"cloudWatchLogGroupName\":\"/aws/Quick_Start/ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver\",\"cloudWatchOutputEnabled\":true}",
                    "DocumentName": "\"AWS-RunPowerShellScript\"",
                    "InstanceIds": "[\"i-06aafc571abe82f37\",\"i-07da7ede6f65300df\"]",
                    "Parameters": "{\"commands\":\"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AD PS Module $_\\\"\\n    Exit 1\\n}\\nNew-VolumeFromRawDisk\\nInvoke-PreConfig\\nInvoke-LcmConfig\"}"
                },
                "Outputs": {
                    "CommandId": [
                        "0a18d6b7-e1b0-4482-847e-3441e16244a1"
                    ],
                    "OutputPayload": [
                        "{\"Status\":\"Success\",\"CommandId\":\"0a18d6b7-e1b0-4482-847e-3441e16244a1\"}"
                    ],
                    "Status": [
                        "Success"
                    ]
                },
                "StepExecutionId": "dbb27cd7-66d4-4bec-a59d-45dba0efcecc",
                "OverriddenParameters": {},
                "NextStep": "configureDc1Mof",
                "ValidNextSteps": [
                    "configureDc1Mof"
                ]
            },
            {
                "StepName": "configureDc1Mof",
                "Action": "aws:runCommand",
                "ExecutionStartTime": "2025-02-12T15:03:07.756000-05:00",
                "ExecutionEndTime": "2025-02-12T15:05:11.913000-05:00",
                "StepStatus": "Success",
                "Inputs": {
                    "CloudWatchOutputConfig": "{\"cloudWatchLogGroupName\":\"/aws/Quick_Start/ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver\",\"cloudWatchOutputEnabled\":true}",
                    "DocumentName": "\"AWS-RunPowerShellScript\"",
                    "InstanceIds": "[\"i-07da7ede6f65300df\"]",
                    "Parameters": "{\"commands\":\"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AD PS Module $_\\\"\\n    Exit 1\\n}\\n$EniConfig = Get-EniConfig\\n$DaSecret = Get-SecretInfo -Domain 'QUICKSILVER' -SecretArn 'arn:aws:secretsmanager:us-east-1:396913736034:secret:ADAdministratorSecret-ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver-MfftSM'\\n$RmSecret = Get-SecretInfo -Domain 'QUICKSILVER' -SecretArn 'arn:aws:secretsmanager:us-east-1:396913736034:secret:RestoreModeSecrets-ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver-53GwA9'\\n$AltSecret = Get-SecretInfo -Domain 'QUICKSILVER' -SecretArn 'arn:aws:secretsmanager:us-east-1:396913736034:secret:ADAltUserSecrets-ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver-SSbL8B'\\nSet-DscConfiguration -AltAdminCredentials $AltSecret.Credentials -AltAdminUserName $AltSecret.Username -DaCredentials $DaSecret.DomainCredentials -DeploymentType 'FirstDc' -DomainDNSName 'quicksilver.aws.dev' -DomainNetBIOSName 'QUICKSILVER' -GatewayAddress $EniConfig.GatewayAddress -InstanceIP $EniConfig.IpAddress -InstanceNetBIOSName 'QUICKSILVERDC1' -LaCredentials $DaSecret.Credentials -MacAddress $EniConfig.MacAddress -RestoreModeCredentials $RmSecret.Credentials -SiteName 'us-east-1' -VPCCIDR '10.2.0.0/16'\"}"
                },
                "Outputs": {
                    "CommandId": [
                        "ca54ee47-087f-4185-a08c-21fe94e51537"
                    ],
                    "Output": [
                        "Getting the DSC encryption certificate thumbprint to secure the MOF file\r\nCreating configuration data block that has the certificate information for DSC configuration processing\r\nGenerating MOF file\r\n\r\n\r\n    Directory: C:\\AWSQuickstart\\ConfigInstance\r\n\r\n\r\nMode                 LastWriteTime         Length Name                                                                 \r\n----                 -------------         ------ ----                                                                 \r\n-a----         2/12/2025   8:05 PM          39128 LocalHost.mof                                                        \r\n\r\n\r\n"
                    ],
                    "OutputPayload": [
                        "{\"Status\":\"Success\",\"ResponseCode\":0,\"Output\":\"Getting the DSC encryption certificate thumbprint to secure the MOF file\\r\\nCreating configuration data block that has the certificate information for DSC configuration processing\\r\\nGenerating MOF file\\r\\n\\r\\n\\r\\n    Directory: C:\\\\AWSQuickstart\\\\ConfigInstance\\r\\n\\r\\n\\r\\nMode                 LastWriteTime         Length Name                                                                 \\r\\n----                 -------------         ------ ----                                                                 \\r\\n-a----         2/12/2025   8:05 PM          39128 LocalHost.mof                                                        \\r\\n\\r\\n\\r\\n\",\"CommandId\":\"ca54ee47-087f-4185-a08c-21fe94e51537\"}"
                    ],
                    "ResponseCode": [
                        "0"
                    ],
                    "Status": [
                        "Success"
                    ]
                },
                "StepExecutionId": "8ace0a90-78d5-435e-b398-847c7084fb05",
                "OverriddenParameters": {},
                "NextStep": "runDc1Mof",
                "ValidNextSteps": [
                    "runDc1Mof"
                ]
            },
            {
                "StepName": "runDc1Mof",
                "Action": "aws:runCommand",
                "OnFailure": "step:signalfailure",
                "ExecutionStartTime": "2025-02-12T15:05:12.112000-05:00",
                "ExecutionEndTime": "2025-02-12T15:16:33.228000-05:00",
                "StepStatus": "Success",
                "Inputs": {
                    "CloudWatchOutputConfig": "{\"cloudWatchLogGroupName\":\"/aws/Quick_Start/ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver\",\"cloudWatchOutputEnabled\":true}",
                    "DocumentName": "\"AWS-RunPowerShellScript\"",
                    "InstanceIds": "[\"i-07da7ede6f65300df\"]",
                    "Parameters": "{\"commands\":\"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AD PS Module $_\\\"\\n    Exit 1\\n}\\nStart-DscConfiguration 'C:\\\\AWSQuickstart\\\\ConfigInstance' -Wait -Verbose -Force\\nInvoke-DscStatusCheck\"}"
                },
                "Outputs": {
                    "CommandId": [
                        "3fcb05a4-7354-41fa-9f0b-b6c5936029f5"
                    ],
                    "Output": [
                        "VERBOSE: Perform operation 'Invoke CimMethod' with following parameters, ''methodName' = \r\nSendConfigurationApply,'className' = MSFT_DSCLocalConfigurationManager,'namespaceName' = \r\nroot/Microsoft/Windows/DesiredStateConfiguration'.\nVERBOSE: An LCM method call arrived from computer EC2AMAZ-TFEKDJ4 with user sid S-1-5-18.\nVERBOSE: [EC2AMAZ-TFEKDJ4]: LCM:  [ Start  Set      ]\nVERBOSE: [EC2AMAZ-TFEKDJ4]: LCM:  [ Start  Resource ]  [[NetAdapterName]RenameNetAdapterPrimary]\nVERBOSE: [EC2AMAZ-TFEKDJ4]: LCM:  [ Start  Test     ]  [[NetAdapterName]RenameNetAdapterPrimary]\nVERBOSE: [EC2AMAZ-TFEKDJ4]:                            [[NetAdapterName]RenameNetAdapterPrimary] Test-TargetResource: \r\nTesting the network adapter Name 'Primary'.\nVERBOSE: [EC2AMAZ-TFEKDJ4]:                            [[NetAdapterName]RenameNetAdapterPrimary] Find-NetworkAdapter: \r\nFinding network adapters matching the parameters.\nVERBOSE: [EC2AMAZ-TFEKDJ4]:                            [[NetAdapterName]RenameNetAdapterPrimary] Test-TargetResource: \r\nFinding network adapter matching search criteria.\nVERBOSE: [EC2AMAZ-TFEKDJ4]:                            [[NetAdapterName]RenameNetAdapterPrimary] Find-NetworkAdapter: \r\nFinding network adapters matching the parameters.\nVERBOSE: [EC2AMAZ-TFEKDJ4]:                            [[NetAdapterName]RenameNetAdapterPrimary] Find-NetworkAdapter: 1\r\n network adapters were found matching the parameters.\nVERBOSE: [EC2AMAZ-TFEKDJ4]:                            [[NetAdapterName]RenameNetAdapterPrimary] Test-TargetResource: \r\nnetwork adapter Name 'Ethernet 3' does not match the adapter 'Primary' that was found. Rename required.\nVERBOSE: [EC2AMAZ-TFEKDJ4]: LCM:  [ End    Test     ]  [[NetAdapterName]RenameNetAdapterPrimary]  in 1.3000 seconds.\nVERBOSE: [EC2AMAZ-TFEKDJ4]: LCM:  [ Start  Set      ]  [[NetAdapterName]RenameNetAdapterPrimary]\nVERBOSE: [EC2AMAZ-TFEKDJ4]:                            [[NetAdapterName]RenameNetAdapterPrimary] Set-TargetResource: \r\nSetting the network adapter Name 'Primary'.\nVERBOSE: [EC2AMAZ-TFEKDJ4]:                            [[NetAdapterName]RenameNetAdapterPrimary] Find-NetworkAdapter: \r\nFinding network adapters matching the parameters.\nVERBOSE: [EC2AMAZ-TFEKDJ4]:                            [[NetAdapterName]RenameNetAdapterPrimary] Find-NetworkAdapter: 1\r\n network adapters were found matching the parameters.\nVERBOSE: [EC2AMAZ-TFEKDJ4]:                            [[NetAdapterName]RenameNetAdapterPrimary] Set-TargetReso\n---Output truncated---"
                    ],
                    "OutputPayload": [
                        "{\"Status\":\"Success\",\"ResponseCode\":0,\"Output\":\"VERBOSE: Perform operation \\u0027Invoke CimMethod\\u0027 with following parameters, \\u0027\\u0027methodName\\u0027 \\u003d \\r\\nSendConfigurationApply,\\u0027className\\u0027 \\u003d MSFT_DSCLocalConfigurationManager,\\u0027namespaceName\\u0027 \\u003d \\r\\nroot/Microsoft/Windows/DesiredStateConfiguration\\u0027.\\nVERBOSE: An LCM method call arrived from computer EC2AMAZ-TFEKDJ4 with user sid S-1-5-18.\\nVERBOSE: [EC2AMAZ-TFEKDJ4]: LCM:  [ Start  Set      ]\\nVERBOSE: [EC2AMAZ-TFEKDJ4]: LCM:  [ Start  Resource ]  [[NetAdapterName]RenameNetAdapterPrimary]\\nVERBOSE: [EC2AMAZ-TFEKDJ4]: LCM:  [ Start  Test     ]  [[NetAdapterName]RenameNetAdapterPrimary]\\nVERBOSE: [EC2AMAZ-TFEKDJ4]:                            [[NetAdapterName]RenameNetAdapterPrimary] Test-TargetResource: \\r\\nTesting the network adapter Name \\u0027Primary\\u0027.\\nVERBOSE: [EC2AMAZ-TFEKDJ4]:                            [[NetAdapterName]RenameNetAdapterPrimary] Find-NetworkAdapter: \\r\\nFinding network adapters matching the parameters.\\nVERBOSE: [EC2AMAZ-TFEKDJ4]:                            [[NetAdapterName]RenameNetAdapterPrimary] Test-TargetResource: \\r\\nFinding network adapter matching search criteria.\\nVERBOSE: [EC2AMAZ-TFEKDJ4]:                            [[NetAdapterName]RenameNetAdapterPrimary] Find-NetworkAdapter: \\r\\nFinding network adapters matching the parameters.\\nVERBOSE: [EC2AMAZ-TFEKDJ4]:                            [[NetAdapterName]RenameNetAdapterPrimary] Find-NetworkAdapter: 1\\r\\n network adapters were found matching the parameters.\\nVERBOSE: [EC2AMAZ-TFEKDJ4]:                            [[NetAdapterName]RenameNetAdapterPrimary] Test-TargetResource: \\r\\nnetwork adapter Name \\u0027Ethernet 3\\u0027 does not match the adapter \\u0027Primary\\u0027 that was found. Rename required.\\nVERBOSE: [EC2AMAZ-TFEKDJ4]: LCM:  [ End    Test     ]  [[NetAdapterName]RenameNetAdapterPrimary]  in 1.3000 seconds.\\nVERBOSE: [EC2AMAZ-TFEKDJ4]: LCM:  [ Start  Set      ]  [[NetAdapterName]RenameNetAdapterPrimary]\\nVERBOSE: [EC2AMAZ-TFEKDJ4]:                            [[NetAdapterName]RenameNetAdapterPrimary] Set-TargetResource: \\r\\nSetting the network adapter Name \\u0027Primary\\u0027.\\nVERBOSE: [EC2AMAZ-TFEKDJ4]:                            [[NetAdapterName]RenameNetAdapterPrimary] Find-NetworkAdapter: \\r\\nFinding network adapters matching the parameters.\\nVERBOSE: [EC2AMAZ-TFEKDJ4]:                            [[NetAdapterName]RenameNetAdapterPrimary] Find-NetworkAdapter: 1\\r\\n network adapters were found matching the parameters.\\nVERBOSE: [EC2AMAZ-TFEKDJ4]:                            [[NetAdapterName]RenameNetAdapterPrimary] Set-TargetReso\\n---Output truncated---\",\"CommandId\":\"3fcb05a4-7354-41fa-9f0b-b6c5936029f5\"}"
                    ],
                    "ResponseCode": [
                        "0"
                    ],
                    "Status": [
                        "Success"
                    ]
                },
                "StepExecutionId": "41ae2634-4372-4909-a140-a271ee3c1672",
                "OverriddenParameters": {},
                "NextStep": "configureDc2Mof",
                "ValidNextSteps": [
                    "configureDc2Mof"
                ]
            },
            {
                "StepName": "configureDc2Mof",
                "Action": "aws:runCommand",
                "ExecutionStartTime": "2025-02-12T15:16:33.433000-05:00",
                "ExecutionEndTime": "2025-02-12T15:18:23.760000-05:00",
                "StepStatus": "Success",
                "Inputs": {
                    "CloudWatchOutputConfig": "{\"cloudWatchLogGroupName\":\"/aws/Quick_Start/ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver\",\"cloudWatchOutputEnabled\":true}",
                    "DocumentName": "\"AWS-RunPowerShellScript\"",
                    "InstanceIds": "[\"i-06aafc571abe82f37\"]",
                    "Parameters": "{\"commands\":\"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AD PS Module $_\\\"\\n    Exit 1\\n}\\n$EniConfig = Get-EniConfig\\n$DaSecret = Get-SecretInfo -Domain 'QUICKSILVER' -SecretArn 'arn:aws:secretsmanager:us-east-1:396913736034:secret:ADAdministratorSecret-ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver-MfftSM'\\n$RmSecret = Get-SecretInfo -Domain 'QUICKSILVER' -SecretArn 'arn:aws:secretsmanager:us-east-1:396913736034:secret:RestoreModeSecrets-ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver-53GwA9'\\nSet-DscConfiguration -DaCredentials $DaSecret.DomainCredentials -DeploymentType 'SecondaryDC' -DomainDNSName 'quicksilver.aws.dev' -DomainNetBIOSName 'QUICKSILVER' -ExistingDcIP01 '10.2.0.10' -GatewayAddress $EniConfig.GatewayAddress -InstanceIP $EniConfig.IpAddress -InstanceIPDns $EniConfig.DnsIpAddress -InstanceNetBIOSName 'QUICKSILVERDC2' -MacAddress $EniConfig.MacAddress -RestoreModeCredentials $RmSecret.Credentials\"}"
                },
                "Outputs": {
                    "CommandId": [
                        "4b7e797a-bc54-479c-b0ba-ccb0497390eb"
                    ],
                    "Output": [
                        "Getting the DSC encryption certificate thumbprint to secure the MOF file\r\nCreating configuration data block that has the certificate information for DSC configuration processing\r\nGenerating MOF file\r\n\r\n\r\n    Directory: C:\\AWSQuickstart\\ConfigInstance\r\n\r\n\r\nMode                 LastWriteTime         Length Name                                                                 \r\n----                 -------------         ------ ----                                                                 \r\n-a----         2/12/2025   8:18 PM          21876 LocalHost.mof                                                        \r\n\r\n\r\n"
                    ],
                    "OutputPayload": [
                        "{\"Status\":\"Success\",\"ResponseCode\":0,\"Output\":\"Getting the DSC encryption certificate thumbprint to secure the MOF file\\r\\nCreating configuration data block that has the certificate information for DSC configuration processing\\r\\nGenerating MOF file\\r\\n\\r\\n\\r\\n    Directory: C:\\\\AWSQuickstart\\\\ConfigInstance\\r\\n\\r\\n\\r\\nMode                 LastWriteTime         Length Name                                                                 \\r\\n----                 -------------         ------ ----                                                                 \\r\\n-a----         2/12/2025   8:18 PM          21876 LocalHost.mof                                                        \\r\\n\\r\\n\\r\\n\",\"CommandId\":\"4b7e797a-bc54-479c-b0ba-ccb0497390eb\"}"
                    ],
                    "ResponseCode": [
                        "0"
                    ],
                    "Status": [
                        "Success"
                    ]
                },
                "StepExecutionId": "4d1ffa5c-e33a-4e89-9ba2-70d08994765b",
                "OverriddenParameters": {},
                "NextStep": "runDc2Mof",
                "ValidNextSteps": [
                    "runDc2Mof"
                ]
            },
            {
                "StepName": "runDc2Mof",
                "Action": "aws:runCommand",
                "OnFailure": "step:signalfailure",
                "ExecutionStartTime": "2025-02-12T15:18:23.972000-05:00",
                "ExecutionEndTime": "2025-02-12T15:31:25.517000-05:00",
                "StepStatus": "Success",
                "Inputs": {
                    "CloudWatchOutputConfig": "{\"cloudWatchLogGroupName\":\"/aws/Quick_Start/ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver\",\"cloudWatchOutputEnabled\":true}",
                    "DocumentName": "\"AWS-RunPowerShellScript\"",
                    "InstanceIds": "[\"i-06aafc571abe82f37\"]",
                    "Parameters": "{\"commands\":\"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AD PS Module $_\\\"\\n    Exit 1\\n}\\nStart-DscConfiguration 'C:\\\\AWSQuickstart\\\\ConfigInstance' -Wait -Verbose -Force\\nInvoke-DscStatusCheck\"}"
                },
                "Outputs": {
                    "CommandId": [
                        "e1dd8c76-c1f6-4313-96db-9c59e35d608f"
                    ],
                    "Output": [
                        "VERBOSE: Perform operation 'Invoke CimMethod' with following parameters, ''methodName' = \r\nSendConfigurationApply,'className' = MSFT_DSCLocalConfigurationManager,'namespaceName' = \r\nroot/Microsoft/Windows/DesiredStateConfiguration'.\nVERBOSE: An LCM method call arrived from computer EC2AMAZ-1V6GANT with user sid S-1-5-18.\nVERBOSE: [EC2AMAZ-1V6GANT]: LCM:  [ Start  Set      ]\nVERBOSE: [EC2AMAZ-1V6GANT]: LCM:  [ Start  Resource ]  [[NetAdapterName]RenameNetAdapterPrimary]\nVERBOSE: [EC2AMAZ-1V6GANT]: LCM:  [ Start  Test     ]  [[NetAdapterName]RenameNetAdapterPrimary]\nVERBOSE: [EC2AMAZ-1V6GANT]:                            [[NetAdapterName]RenameNetAdapterPrimary] Test-TargetResource: \r\nTesting the network adapter Name 'Primary'.\nVERBOSE: [EC2AMAZ-1V6GANT]:                            [[NetAdapterName]RenameNetAdapterPrimary] Find-NetworkAdapter: \r\nFinding network adapters matching the parameters.\nVERBOSE: [EC2AMAZ-1V6GANT]:                            [[NetAdapterName]RenameNetAdapterPrimary] Test-TargetResource: \r\nFinding network adapter matching search criteria.\nVERBOSE: [EC2AMAZ-1V6GANT]:                            [[NetAdapterName]RenameNetAdapterPrimary] Find-NetworkAdapter: \r\nFinding network adapters matching the pa\n---Output truncated---\n----------ERROR-------\nComputer 'EC2AMAZ-1V6GANT' was successfully joined to the new domain 'quicksilver.aws.dev', but renaming it to \r\n'QUICKSILVERDC2' failed with the following error message: The directory service is busy.\r\n    + CategoryInfo          : OperationStopped: (EC2AMAZ-1V6GANT:) [], CimException\r\n    + FullyQualifiedErrorId : FailToRenameAfterJoinDomain,Microsoft.PowerShell.Commands.AddComputerCommand\r\n    + PSComputerName        : LocalHost\r\n \r\nThe PowerShell DSC resource '[Computer]JoinDomain' with SourceInfo \r\n'C:\\AWSQuickstart\\Module-AD\\Module-AD.psm1::490::21::Computer' threw one or more non-terminating errors while running \r\nthe Set-TargetResource functionality. These errors are logged to the ETW channel called \r\nMicrosoft-Windows-DSC/Operational. Refer to this channel for more details.\r\n    + CategoryInfo          : InvalidOperation: (:) [], CimException\r\n    + FullyQualifiedErrorId : NonTerminatingErrorFromProvider\r\n    + PSComputerName        : LocalHost\r\n \r\nThe SendConfigurationApply function did not succeed.\r\n    + CategoryInfo          : NotSpecified: (root/Microsoft/...gurationManager:String) [], CimException\r\n    + FullyQualifiedErrorId : MI RESULT 1\r\n    + PSComputerName        : LocalHost\r\n \r\n"
                    ],
                    "OutputPayload": [
                        "{\"Status\":\"Success\",\"ResponseCode\":0,\"Output\":\"VERBOSE: Perform operation \\u0027Invoke CimMethod\\u0027 with following parameters, \\u0027\\u0027methodName\\u0027 \\u003d \\r\\nSendConfigurationApply,\\u0027className\\u0027 \\u003d MSFT_DSCLocalConfigurationManager,\\u0027namespaceName\\u0027 \\u003d \\r\\nroot/Microsoft/Windows/DesiredStateConfiguration\\u0027.\\nVERBOSE: An LCM method call arrived from computer EC2AMAZ-1V6GANT with user sid S-1-5-18.\\nVERBOSE: [EC2AMAZ-1V6GANT]: LCM:  [ Start  Set      ]\\nVERBOSE: [EC2AMAZ-1V6GANT]: LCM:  [ Start  Resource ]  [[NetAdapterName]RenameNetAdapterPrimary]\\nVERBOSE: [EC2AMAZ-1V6GANT]: LCM:  [ Start  Test     ]  [[NetAdapterName]RenameNetAdapterPrimary]\\nVERBOSE: [EC2AMAZ-1V6GANT]:                            [[NetAdapterName]RenameNetAdapterPrimary] Test-TargetResource: \\r\\nTesting the network adapter Name \\u0027Primary\\u0027.\\nVERBOSE: [EC2AMAZ-1V6GANT]:                            [[NetAdapterName]RenameNetAdapterPrimary] Find-NetworkAdapter: \\r\\nFinding network adapters matching the parameters.\\nVERBOSE: [EC2AMAZ-1V6GANT]:                            [[NetAdapterName]RenameNetAdapterPrimary] Test-TargetResource: \\r\\nFinding network adapter matching search criteria.\\nVERBOSE: [EC2AMAZ-1V6GANT]:                            [[NetAdapterName]RenameNetAdapterPrimary] Find-NetworkAdapter: \\r\\nFinding network adapters matching the pa\\n---Output truncated---\\n----------ERROR-------\\nComputer \\u0027EC2AMAZ-1V6GANT\\u0027 was successfully joined to the new domain \\u0027quicksilver.aws.dev\\u0027, but renaming it to \\r\\n\\u0027QUICKSILVERDC2\\u0027 failed with the following error message: The directory service is busy.\\r\\n    + CategoryInfo          : OperationStopped: (EC2AMAZ-1V6GANT:) [], CimException\\r\\n    + FullyQualifiedErrorId : FailToRenameAfterJoinDomain,Microsoft.PowerShell.Commands.AddComputerCommand\\r\\n    + PSComputerName        : LocalHost\\r\\n \\r\\nThe PowerShell DSC resource \\u0027[Computer]JoinDomain\\u0027 with SourceInfo \\r\\n\\u0027C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1::490::21::Computer\\u0027 threw one or more non-terminating errors while running \\r\\nthe Set-TargetResource functionality. These errors are logged to the ETW channel called \\r\\nMicrosoft-Windows-DSC/Operational. Refer to this channel for more details.\\r\\n    + CategoryInfo          : InvalidOperation: (:) [], CimException\\r\\n    + FullyQualifiedErrorId : NonTerminatingErrorFromProvider\\r\\n    + PSComputerName        : LocalHost\\r\\n \\r\\nThe SendConfigurationApply function did not succeed.\\r\\n    + CategoryInfo          : NotSpecified: (root/Microsoft/...gurationManager:String) [], CimException\\r\\n    + FullyQualifiedErrorId : MI RESULT 1\\r\\n    + PSComputerName        : LocalHost\\r\\n \\r\\n\",\"CommandId\":\"e1dd8c76-c1f6-4313-96db-9c59e35d608f\"}"
                    ],
                    "ResponseCode": [
                        "0"
                    ],
                    "Status": [
                        "Success"
                    ]
                },
                "StepExecutionId": "ee29bb08-ee64-497c-bf22-9c4e3bd65947",
                "OverriddenParameters": {},
                "NextStep": "DisableFW",
                "ValidNextSteps": [
                    "DisableFW"
                ]
            },
            {
                "StepName": "DisableFW",
                "Action": "aws:runCommand",
                "ExecutionStartTime": "2025-02-12T15:31:25.702000-05:00",
                "ExecutionEndTime": "2025-02-12T15:31:36.002000-05:00",
                "StepStatus": "Success",
                "Inputs": {
                    "CloudWatchOutputConfig": "{\"cloudWatchLogGroupName\":\"/aws/Quick_Start/ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver\",\"cloudWatchOutputEnabled\":true}",
                    "DocumentName": "\"AWS-RunPowerShellScript\"",
                    "InstanceIds": "[\"i-06aafc571abe82f37\",\"i-07da7ede6f65300df\"]",
                    "Parameters": "{\"commands\":\"Try {\\n    Get-NetFirewallProfile -ErrorAction Stop | Set-NetFirewallProfile -Enabled False -ErrorAction Stop\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to disable Windows Firewall $_\\\"\\n    Exit 1\\n}\"}"
                },
                "Outputs": {
                    "CommandId": [
                        "e4892b9b-36ee-45de-8cd7-962ed4300c3d"
                    ],
                    "OutputPayload": [
                        "{\"Status\":\"Success\",\"CommandId\":\"e4892b9b-36ee-45de-8cd7-962ed4300c3d\"}"
                    ],
                    "Status": [
                        "Success"
                    ]
                },
                "StepExecutionId": "c3bc5c66-7341-4673-bd8a-95345f62a177",
                "OverriddenParameters": {},
                "NextStep": "DnsConfig",
                "ValidNextSteps": [
                    "DnsConfig"
                ]
            },
            {
                "StepName": "DnsConfig",
                "Action": "aws:runCommand",
                "OnFailure": "step:signalfailure",
                "ExecutionStartTime": "2025-02-12T15:31:36.231000-05:00",
                "ExecutionEndTime": "2025-02-12T15:33:54.595000-05:00",
                "StepStatus": "Success",
                "Inputs": {
                    "CloudWatchOutputConfig": "{\"cloudWatchLogGroupName\":\"/aws/Quick_Start/ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver\",\"cloudWatchOutputEnabled\":true}",
                    "DocumentName": "\"AWS-RunPowerShellScript\"",
                    "InstanceIds": "[\"i-06aafc571abe82f37\"]",
                    "Parameters": "{\"commands\":\"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AD PS Module $_\\\"\\n    Exit 1\\n}\\n$DaSecret = Get-SecretInfo -Domain 'QUICKSILVER' -SecretArn 'arn:aws:secretsmanager:us-east-1:396913736034:secret:ADAdministratorSecret-ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver-MfftSM'\\nSet-DnsDscConfiguration -AD1Deployment -ADServer1NetBIOSName 'QUICKSILVERDC1' -ADServer2NetBIOSName 'QUICKSILVERDC2' -ADServer1PrivateIP '10.2.0.10' -ADServer2PrivateIP '10.2.1.10' -DomainDNSName 'quicksilver.aws.dev' -DaCredentials $DaSecret.Credentials -VPCCIDR '10.2.0.0/16'\"}"
                },
                "Outputs": {
                    "CommandId": [
                        "44de1b0c-6244-4e4e-99a0-3bb9187d26fa"
                    ],
                    "Output": [
                        "Formatting Computer names as FQDN\r\nSetting Cim Sessions for Each Host\r\nVERBOSE: Operation '' complete.\nVERBOSE: Operation '' complete.\nGenerating MOF File\r\n\r\n\r\n    Directory: C:\\AWSQuickstart\\DnsConfig\r\n\r\n\r\nMode                 LastWriteTime         Length Name                                                                 \r\n----                 -------------         ------ ----                                                                 \r\n-a----         2/12/2025   8:33 PM           5334 QUICKSILVERDC1.quicksilver.aws.dev.mof                               \r\n-a----         2/12/2025   8:33 PM           3148 QUICKSILVERDC2.quicksilver.aws.dev.mof                               \r\nProcessing Configuration from Script utilizing pre-created Cim Sessions\r\nVERBOSE: Perform operation 'Invoke CimMethod' with following parameters, ''methodName' = \r\nSendConfigurationApply,'className' = MSFT_DSCLocalConfigurationManager,'namespaceName' = \r\nroot/Microsoft/Windows/DesiredStateConfiguration'.\nVERBOSE: An LCM method call arrived from computer QUICKSILVERDC1 with user sid \r\nS-1-5-21-2013733642-4141054244-2028022997-500.\nVERBOSE: [QUICKSILVERDC1]: LCM:  [ Start  Set      ]\nVERBOSE: [QUICKSILVERDC1]: LCM:  [ Start  Resource ]  [[DnsServerAddress]DnsServerAddress]\nVERBOSE: [QUICKSILVERDC1]: LCM:  [ Start  Test     ]  [[DnsServerAddress]DnsServerAddress]\nVERBOSE: [QUICKSILVERDC1]:                            [[DnsServerAddress]DnsServerAddress] Test-TargetResource: \r\nChecking the DNS server addresses.\nVERBOSE: [QUICKSILVERDC1]:                            [[DnsServerAddress]DnsServerAddress] \r\nGet-DnsClientServerStaticAddress: Getting staticly assigned DNS server IPv4 address for interface alias 'Primary'.\nVERBOSE: [QUICKSILVERDC1]:                            [[DnsServerAddress]DnsServerAddress] \r\nGet-DnsClientServerStaticAddress: Statically assigned DNS server IPv4 address for interface alias 'Primary' is \r\n'127.0.0.1,169.254.169.253'.\nVERBOSE: [QUICKSILVERDC1]:                            [[DnsServerAddress]DnsServerAddress] Test-TargetResource: DNS \r\nserver addresses are not correct. Expected \"10.2.1.10,10.2.0.10,127.0.0.1\", actual \"127.0.0.1,169.254.169.253\".\nVERBOSE: [QUICKSILVERDC1]: LCM:  [ End    Test     ]  [[DnsServerAddress]DnsServerAddress]  in 1.1880 seconds.\nVERBOSE: [QUICKSILVERDC1]: LCM:  [ Start  Set      ]  [[DnsServerAddress]DnsServerAddress]\nVERBOSE: [QUICKSILVERDC1]:                            [[DnsServerAddress]DnsServerAddress] Se\n---Output truncated---"
                    ],
                    "OutputPayload": [
                        "{\"Status\":\"Success\",\"ResponseCode\":0,\"Output\":\"Formatting Computer names as FQDN\\r\\nSetting Cim Sessions for Each Host\\r\\nVERBOSE: Operation \\u0027\\u0027 complete.\\nVERBOSE: Operation \\u0027\\u0027 complete.\\nGenerating MOF File\\r\\n\\r\\n\\r\\n    Directory: C:\\\\AWSQuickstart\\\\DnsConfig\\r\\n\\r\\n\\r\\nMode                 LastWriteTime         Length Name                                                                 \\r\\n----                 -------------         ------ ----                                                                 \\r\\n-a----         2/12/2025   8:33 PM           5334 QUICKSILVERDC1.quicksilver.aws.dev.mof                               \\r\\n-a----         2/12/2025   8:33 PM           3148 QUICKSILVERDC2.quicksilver.aws.dev.mof                               \\r\\nProcessing Configuration from Script utilizing pre-created Cim Sessions\\r\\nVERBOSE: Perform operation \\u0027Invoke CimMethod\\u0027 with following parameters, \\u0027\\u0027methodName\\u0027 \\u003d \\r\\nSendConfigurationApply,\\u0027className\\u0027 \\u003d MSFT_DSCLocalConfigurationManager,\\u0027namespaceName\\u0027 \\u003d \\r\\nroot/Microsoft/Windows/DesiredStateConfiguration\\u0027.\\nVERBOSE: An LCM method call arrived from computer QUICKSILVERDC1 with user sid \\r\\nS-1-5-21-2013733642-4141054244-2028022997-500.\\nVERBOSE: [QUICKSILVERDC1]: LCM:  [ Start  Set      ]\\nVERBOSE: [QUICKSILVERDC1]: LCM:  [ Start  Resource ]  [[DnsServerAddress]DnsServerAddress]\\nVERBOSE: [QUICKSILVERDC1]: LCM:  [ Start  Test     ]  [[DnsServerAddress]DnsServerAddress]\\nVERBOSE: [QUICKSILVERDC1]:                            [[DnsServerAddress]DnsServerAddress] Test-TargetResource: \\r\\nChecking the DNS server addresses.\\nVERBOSE: [QUICKSILVERDC1]:                            [[DnsServerAddress]DnsServerAddress] \\r\\nGet-DnsClientServerStaticAddress: Getting staticly assigned DNS server IPv4 address for interface alias \\u0027Primary\\u0027.\\nVERBOSE: [QUICKSILVERDC1]:                            [[DnsServerAddress]DnsServerAddress] \\r\\nGet-DnsClientServerStaticAddress: Statically assigned DNS server IPv4 address for interface alias \\u0027Primary\\u0027 is \\r\\n\\u0027127.0.0.1,169.254.169.253\\u0027.\\nVERBOSE: [QUICKSILVERDC1]:                            [[DnsServerAddress]DnsServerAddress] Test-TargetResource: DNS \\r\\nserver addresses are not correct. Expected \\\"10.2.1.10,10.2.0.10,127.0.0.1\\\", actual \\\"127.0.0.1,169.254.169.253\\\".\\nVERBOSE: [QUICKSILVERDC1]: LCM:  [ End    Test     ]  [[DnsServerAddress]DnsServerAddress]  in 1.1880 seconds.\\nVERBOSE: [QUICKSILVERDC1]: LCM:  [ Start  Set      ]  [[DnsServerAddress]DnsServerAddress]\\nVERBOSE: [QUICKSILVERDC1]:                            [[DnsServerAddress]DnsServerAddress] Se\\n---Output truncated---\",\"CommandId\":\"44de1b0c-6244-4e4e-99a0-3bb9187d26fa\"}"
                    ],
                    "ResponseCode": [
                        "0"
                    ],
                    "Status": [
                        "Success"
                    ]
                },
                "StepExecutionId": "1dc53035-ee6b-4539-ac73-cae736af880e",
                "OverriddenParameters": {},
                "NextStep": "PostConfig",
                "ValidNextSteps": [
                    "PostConfig"
                ]
            },
            {
                "StepName": "PostConfig",
                "Action": "aws:runCommand",
                "ExecutionStartTime": "2025-02-12T15:33:54.822000-05:00",
                "ExecutionEndTime": "2025-02-12T15:35:39.889000-05:00",
                "StepStatus": "Success",
                "Inputs": {
                    "CloudWatchOutputConfig": "{\"cloudWatchLogGroupName\":\"/aws/Quick_Start/ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver\",\"cloudWatchOutputEnabled\":true}",
                    "DocumentName": "\"AWS-RunPowerShellScript\"",
                    "InstanceIds": "[\"i-06aafc571abe82f37\",\"i-07da7ede6f65300df\"]",
                    "Parameters": "{\"commands\":\"Try {\\n    Import-Module -Name 'C:\\\\AWSQuickstart\\\\Module-AD\\\\Module-AD.psm1' -Force\\n} Catch [System.Exception] {\\n    Write-Output \\\"Failed to import AD PS Module $_\\\"\\n    Exit 1\\n}\\nSet-PostPromoConfig -S3BucketName 'quicksilver-aws-ia' -S3BucketRegion 'us-east-1' -S3KeyPrefix 'cfn-ps-microsoft-activedirectory/' -CreateDefaultOUs 'No' -TombstoneLifetime '180' -DeletedObjectLifetime '180'\\n\\nIf ('false' -eq 'true') {\\n  Set-DcAuditDscConfiguration\\n  Set-LogsAndMetricsCollection -Role 'DomainController' -Stackname 'ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver'\\n}\\n\\nInvoke-Cleanup -VPCCIDR '10.2.0.0/16'\"}"
                },
                "Outputs": {
                    "CommandId": [
                        "3c9ff415-3bb8-44c1-a2a3-16aaf5debdf2"
                    ],
                    "OutputPayload": [
                        "{\"Status\":\"Success\",\"CommandId\":\"3c9ff415-3bb8-44c1-a2a3-16aaf5debdf2\"}"
                    ],
                    "Status": [
                        "Success"
                    ]
                },
                "StepExecutionId": "277dfe02-b33d-4f2b-984a-321bdf6753e8",
                "OverriddenParameters": {},
                "ValidNextSteps": [
                    "configureIMDSv2dc1"
                ]
            },
            {
                "StepName": "configureIMDSv2dc1",
                "Action": "aws:executeAwsApi",
                "TimeoutSeconds": 300,
                "OnFailure": "step:signalfailure",
                "MaxAttempts": 3,
                "ExecutionStartTime": "2025-02-12T15:35:40.120000-05:00",
                "ExecutionEndTime": "2025-02-12T15:35:40.761000-05:00",
                "StepStatus": "Success",
                "Inputs": {
                    "Api": "\"ModifyInstanceMetadataOptions\"",
                    "HttpEndpoint": "\"enabled\"",
                    "HttpTokens": "\"required\"",
                    "InstanceId": "\"i-07da7ede6f65300df\"",
                    "Service": "\"ec2\""
                },
                "Outputs": {},
                "StepExecutionId": "00925f8c-c05c-40de-9e1f-ae631db7ce43",
                "OverriddenParameters": {},
                "IsEnd": false,
                "IsCritical": true,
                "ValidNextSteps": [
                    "configureIMDSv2dc2"
                ]
            },
            {
                "StepName": "configureIMDSv2dc2",
                "Action": "aws:executeAwsApi",
                "TimeoutSeconds": 300,
                "OnFailure": "step:signalfailure",
                "MaxAttempts": 3,
                "ExecutionStartTime": "2025-02-12T15:35:40.978000-05:00",
                "ExecutionEndTime": "2025-02-12T15:35:41.609000-05:00",
                "StepStatus": "Success",
                "Inputs": {
                    "Api": "\"ModifyInstanceMetadataOptions\"",
                    "HttpEndpoint": "\"enabled\"",
                    "HttpTokens": "\"required\"",
                    "InstanceId": "\"i-06aafc571abe82f37\"",
                    "Service": "\"ec2\""
                },
                "Outputs": {},
                "StepExecutionId": "460a07ad-3bba-40a8-a815-7289c9c63eac",
                "OverriddenParameters": {},
                "IsEnd": false,
                "IsCritical": true,
                "ValidNextSteps": [
                    "CFNSignalEnd"
                ]
            },
            {
                "StepName": "CFNSignalEnd",
                "Action": "aws:branch",
                "ExecutionStartTime": "2025-02-12T15:35:41.808000-05:00",
                "ExecutionEndTime": "2025-02-12T15:35:41.939000-05:00",
                "StepStatus": "Success",
                "Inputs": {
                    "Choices": "[{\"Not\":{\"StringEquals\":\"\",\"Variable\":\"ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver\"},\"NextStep\":\"signalsuccess\"},{\"StringEquals\":\"\",\"Variable\":\"ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver\",\"NextStep\":\"sleepend\"}]"
                },
                "Outputs": {
                    "NextStep": [
                        "signalsuccess"
                    ],
                    "OutputPayload": [
                        "{\"NextStep\":\"signalsuccess\"}"
                    ]
                },
                "StepExecutionId": "10b29593-2bef-4050-bcf6-eff240d36329",
                "OverriddenParameters": {},
                "ValidNextSteps": [
                    "signalsuccess"
                ]
            },
            {
                "StepName": "signalsuccess",
                "Action": "aws:executeAwsApi",
                "ExecutionStartTime": "2025-02-12T15:35:42.151000-05:00",
                "ExecutionEndTime": "2025-02-12T15:35:42.448000-05:00",
                "StepStatus": "Success",
                "Inputs": {
                    "Api": "\"SignalResource\"",
                    "LogicalResourceId": "\"DomainController2\"",
                    "Service": "\"cloudformation\"",
                    "StackName": "\"ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver\"",
                    "Status": "\"SUCCESS\"",
                    "UniqueId": "\"i-06aafc571abe82f37\""
                },
                "Outputs": {},
                "StepExecutionId": "2273300e-bdf6-4417-a02a-88b5fab7f743",
                "OverriddenParameters": {},
                "IsEnd": true
            },
            {
                "StepName": "sleepend",
                "Action": "aws:sleep",
                "StepStatus": "Pending",
                "Inputs": {},
                "StepExecutionId": "94d36e08-789c-4d9a-b5f3-00836ba5201d",
                "OverriddenParameters": {},
                "IsEnd": true
            },
            {
                "StepName": "signalfailure",
                "Action": "aws:executeAwsApi",
                "StepStatus": "Pending",
                "Inputs": {},
                "StepExecutionId": "37c016f5-c828-48e8-8add-9db07028badb",
                "OverriddenParameters": {}
            }
        ],
        "StepExecutionsTruncated": false,
        "Parameters": {
            "ADAdminSecParamName": [
                "arn:aws:secretsmanager:us-east-1:396913736034:secret:ADAdministratorSecret-ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver-MfftSM"
            ],
            "ADAltUserSecParamName": [
                "arn:aws:secretsmanager:us-east-1:396913736034:secret:ADAltUserSecrets-ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver-SSbL8B"
            ],
            "ADServer1NetBIOSName": [
                "QUICKSILVERDC1"
            ],
            "ADServer1PrivateIP": [
                "10.2.0.10"
            ],
            "ADServer2NetBIOSName": [
                "QUICKSILVERDC2"
            ],
            "ADServer2PrivateIP": [
                "10.2.1.10"
            ],
            "CreateDefaultOUs": [
                "No"
            ],
            "DeletedObjectLifetime": [
                "180"
            ],
            "DomainDNSName": [
                "quicksilver.aws.dev"
            ],
            "DomainNetBIOSName": [
                "QUICKSILVER"
            ],
            "EnableAdvancedAudtingandMetrics": [
                "false"
            ],
            "QSS3BucketName": [
                "quicksilver-aws-ia"
            ],
            "QSS3BucketRegion": [
                "us-east-1"
            ],
            "QSS3KeyPrefix": [
                "cfn-ps-microsoft-activedirectory/"
            ],
            "RestoreModeSecParamName": [
                "arn:aws:secretsmanager:us-east-1:396913736034:secret:RestoreModeSecrets-ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver-53GwA9"
            ],
            "StackName": [
                "ActiveDirectory-SharedServices-10-2-0-0-16-QuickSilver"
            ],
            "TombstoneLifetime": [
                "180"
            ],
            "URLSuffix": [
                "amazonaws.com"
            ],
            "VPCCIDR": [
                "10.2.0.0/16"
            ]
        },
        "Outputs": {},
        "Mode": "Auto",
        "ExecutedBy": "arn:aws:sts::396913736034:assumed-role/ActiveDirectory-SharedServices-10-2-0--ADServerRole-DR6gnZgCmoaX/i-06aafc571abe82f37",
        "Targets": [],
        "ResolvedTargets": {
            "ParameterValues": [],
            "Truncated": false
        }
    }
}
